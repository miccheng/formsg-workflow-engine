# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # See the Node orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@7.0.0

jobs:
  integration-tests:
    docker:
      - image: cimg/base:stable
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_USER: formsgworkflow
          POSTGRES_PASSWORD: password1234
          POSTGRES_DB: formsgworkflow
          TZ: GMT+8
          PGTZ: GMT+8
    steps:
      - checkout
      - node/install:
          node-version: '20.18.1'
      - node/install-packages
      - run: cp env.sample .env
      - run: |
          npx nx prisma-push formsg-workflow-engine && \
          npx nx prisma-generate formsg-workflow-engine && \
          npx nx prisma-seed formsg-workflow-engine --script seed_data.ts
      - run: npx nx test temporal-workflows
  unit-tests:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          node-version: '20.18.1'
      - node/install-packages
      - run: cp env.sample .env
      - run: npx nx test formsg-workflow-engine
  docker-build-formsg-workflow-engine:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          node-version: '20.18.1'
      - node/install-packages
      - setup_remote_docker:
          docker_layer_caching: true
      - run: cp env.sample .env
      - run: npx nx prisma-generate formsg-workflow-engine
      - run: npx nx docker-build formsg-workflow-engine
  docker-build-temporal-worker:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          node-version: '20.18.1'
      - node/install-packages
      - setup_remote_docker:
          docker_layer_caching: true
      - run: cp env.sample .env
      - run: npx nx prisma-generate formsg-workflow-engine
      - run: npx nx docker-build temporal-worker

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test_and_build:
    jobs:
      - unit-tests
      - integration-tests
      - docker-build-formsg-workflow-engine:
          requires:
            - unit-tests
      - docker-build-temporal-worker:
          requires:
            - unit-tests
            - integration-tests